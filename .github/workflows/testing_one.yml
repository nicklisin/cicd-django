name: Django Tests and Deploy

on: 
  push:       
    branches:
      - master

jobs:
  build-backend:
    runs-on: ubuntu-latest

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8
    - name: Tests
      run: | 
        python3 manage.py test
    - name: Yandex Cloud CR "Login" Action for GitHub Actions
      uses: yc-actions/yc-cr-login@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    - name: App Build, tag, and push image to Yandex Cloud Container Registry
      env:
        CR_REGISTRY: crpeg05053fj7bqfk5od
        CR_REPOSITORY: cicd-django
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:app-$IMAGE_TAG .
        docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:app-$IMAGE_TAG

  build-proxy:
      runs-on: ubuntu-latest
      # env:
      steps:
      - uses: actions/checkout@v3
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Proxy Nginx Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpeg05053fj7bqfk5od
          CR_REPOSITORY: cicd-django
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:proxy-$IMAGE_TAG ./proxy
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:proxy-$IMAGE_TAG

  update-yc:
    runs-on: ubuntu-latest
    needs: [build-backend, build-proxy]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1
        env:
          CR_REGISTRY: crpeg05053fj7bqfk5od
          CR_REPOSITORY: cicd-django
          IMAGE_TAG: ${{ github.sha }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: b1gpbt4jb9ls1d9364c8
          VM-name: coi-vm
          vm-platform-id: 'standard-v2'
          vm-cores: 2
          vm-core-fraction: 50
          vm-memory: 2Gb
          vm-disk-size: 30Gb
          vm-zone-id: ru-central1-a
          vm-service-account-id: aje2vjfhqockpmghcg0t
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose-deploy.yaml'